module:: symilar
:platform: Linix
:synopsis: Library for calculation symilarity in python code.

.. moduleauthor:: Thomas Boose <thomas@boose.nl>

.. license:: Copyright 2014 Thomas Boose
thomas at boose dot nl.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

This project is a combination of python files that help me with calculating the similarity between 2 pieces of python code. The "Code" class can be seen as the most external part of the project. It allows me to instantiatie an object representing a piece of code and convert it into different formats. These formats are inpired by the paper that comes with the standford "Moss" service and include:
- A getWorkingCopy(): a still functioning but renamed version of the code
- A getHashCopy(): a working copy hashed into chunks representing names, constants, methodnames, classnames operators and symbols.
- A getWinnow(): a fingerprint of a hashcopy that can be used to compare pieces of code.

